package com.dung.clipboard

import android.content.ClipboardManager
import android.content.Context
import android.graphics.Color
import android.os.Bundle
import android.util.TypedValue
import android.view.Gravity
import android.view.ViewGroup
import android.widget.LinearLayout
import android.widget.ScrollView
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import android.content.ClipData

class ClipboardActivity : AppCompatActivity() {
    private lateinit var clipboardManager: ClipboardManager

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        // Kh·ªüi t·∫°o ClipboardDataManager tr∆∞·ªõc khi s·ª≠ d·ª•ng
        ClipboardDataManager.initialize(this)
        clipboardManager = getSystemService(Context.CLIPBOARD_SERVICE) as ClipboardManager

        // Thi·∫øt l·∫≠p layout ch√≠nh c·ªßa Activity
        val mainLayout = LinearLayout(this).apply {
            orientation = LinearLayout.VERTICAL
            setBackgroundColor(Color.argb(200, 0, 150, 136))
            layoutParams = ViewGroup.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.MATCH_PARENT
            )
        }

        // Th√™m ti√™u ƒë·ªÅ
        val title = TextView(this).apply {
            text = "üìã ƒê√É COPY"
            setTextColor(Color.WHITE)
            textSize = 24f
            gravity = Gravity.CENTER
            setPadding(dpToPx(16), dpToPx(16), dpToPx(16), dpToPx(16))
            layoutParams = LinearLayout.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.WRAP_CONTENT
            )
        }
        mainLayout.addView(title)
        
        // Th√™m ScrollView ƒë·ªÉ c√≥ th·ªÉ cu·ªôn danh s√°ch
        val scrollView = ScrollView(this).apply {
            layoutParams = LinearLayout.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.MATCH_PARENT
            )
        }
        
        // Layout ƒë·ªÉ ch·ª©a c√°c item ƒë√£ copy
        val itemsLayout = LinearLayout(this).apply {
            orientation = LinearLayout.VERTICAL
            layoutParams = LinearLayout.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.WRAP_CONTENT
            ).apply {
                setMargins(dpToPx(16), dpToPx(8), dpToPx(16), dpToPx(8))
            }
        }

        // Th√™m c√°c item ƒë√£ copy v√†o layout
        addCopiedItems(itemsLayout)

        scrollView.addView(itemsLayout)
        mainLayout.addView(scrollView)
        setContentView(mainLayout)
    }

    private fun addCopiedItems(layout: LinearLayout) {
        ClipboardDataManager.getCopiedList().forEach { text ->
            val textView = TextView(this).apply {
                this.text = text
                setTextColor(Color.BLACK)
                textSize = 16f
                setBackgroundColor(Color.WHITE)
                setPadding(dpToPx(12), dpToPx(12), dpToPx(12), dpToPx(12))
                layoutParams = LinearLayout.LayoutParams(
                    ViewGroup.LayoutParams.MATCH_PARENT,
                    ViewGroup.LayoutParams.WRAP_CONTENT
                ).apply {
                    setMargins(0, 0, 0, dpToPx(8))
                }
                // Khi click v√†o item, sao ch√©p l·∫°i n·ªôi dung v√†o clipboard
                setOnClickListener {
                    clipboardManager.setPrimaryClip(ClipData.newPlainText("Copied Text", text))
                    Toast.makeText(this@ClipboardActivity, "ƒê√£ sao ch√©p: $text", Toast.LENGTH_SHORT).show()
                    // C√≥ th·ªÉ ƒë√≥ng activity n√†y sau khi sao ch√©p
                    finish()
                }
            }
            layout.addView(textView)
        }
    }
    
    // H√†m chuy·ªÉn ƒë·ªïi dp sang pixel
    private fun dpToPx(dp: Int): Int {
        return TypedValue.applyDimension(
            TypedValue.COMPLEX_UNIT_DIP,
            dp.toFloat(),
            resources.displayMetrics
        ).toInt()
    }
}

